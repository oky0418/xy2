require 'telegram/bot'
require 'json'
require './modules/get_user_id'
require './modules/view_balance'
require './modules/transfer'
require './modules/deposit'
require './modules/withdraw'
require './modules/send_red_packet'
require './modules/grab_red_packet'
require './modules/leaderboard'
require './modules/minesweeper'
require './modules/admin_control'
require './modules/admin_infinite'

TOKEN = '7594251898:AAHZOMv4F4WRZUg-SDrT0iPQgdPA8TsuDNU'

# 数据存储文件夹
DATA_FOLDER = './data'
MODULES_FOLDER = './modules'

# 创建数据存储文件夹
Dir.mkdir(DATA_FOLDER) unless Dir.exist?(DATA_FOLDER)
Dir.mkdir(MODULES_FOLDER) unless Dir.exist?(MODULES_FOLDER)

USER_DATA_FILE = './data/users.json'
RED_PACKET_FILE = './data/red_packets.json'

# 加载或初始化用户数据
def load_data(file_path)
  File.exist?(file_path) ? JSON.parse(File.read(file_path)) : {}
end

def save_data(file_path, data)
  File.write(file_path, JSON.pretty_generate(data))
end

users = load_data(USER_DATA_FILE)
red_packets = load_data(RED_PACKET_FILE)

# 管理员设置
ADMIN_ID = 123456789

Telegram::Bot::Client.run(TOKEN) do |bot|
  bot.listen do |message|
    user_id = message.from.id
    chat_id = message.chat.id
    text = message.text

    users[user_id] ||= { 'balance' => 0 } # 初始化用户数据

    case text
    when '/id'
      get_user_id(bot, chat_id, user_id)
    when '/balance'
      view_balance(bot, chat_id, user_id, users, ADMIN_ID)
    when /^\/deposit (\d+)$/
      amount = text.match(/^\/deposit (\d+)$/)[1].to_i
      deposit(bot, chat_id, user_id, amount, users)
    when /^\/withdraw (\d+)$/
      amount = text.match(/^\/withdraw (\d+)$/)[1].to_i
      withdraw(bot, chat_id, user_id, amount, users)
    when /^\/transfer (\d+) (\d+)$/
      recipient_id, amount = text.match(/^\/transfer (\d+) (\d+)$/).captures.map(&:to_i)
      transfer(bot, chat_id, user_id, recipient_id, amount, users)
    when /^\/redpacket (\d+) (\d+)$/
      total_amount, count = text.match(/^\/redpacket (\d+) (\d+)$/).captures.map(&:to_i)
      send_red_packet(bot, chat_id, user_id, total_amount, count, users, red_packets)
    when /^\/grab (\d+)$/
      red_packet_id = text.match(/^\/grab (\d+)$/)[1].to_i
      grab_red_packet(bot, chat_id, user_id, red_packet_id, users, red_packets)
    when '/leaderboard'
      leaderboard(bot, chat_id, users)
    when /^\/mine (\d+)$/
      choice = text.match(/^\/mine (\d+)$/)[1].to_i
      minesweeper(bot, chat_id, user_id, choice, users)
    when /^\/setbalance (\d+) (\d+)$/
      admin_control(bot, chat_id, user_id, text, users, ADMIN_ID)
    when /^\/setinfinite (\d+)$/
      admin_infinite(bot, chat_id, user_id, text, users, ADMIN_ID)
    else
      bot.api.send_message(chat_id: chat_id, text: "未知命令！")
    end
  end
end